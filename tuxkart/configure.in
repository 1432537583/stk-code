dnl Process this file with autoconf to produce a configure script.

AC_PREREQ([2.54])

AC_INIT(src/tuxkart.cxx)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE(tuxkart, 0.4.0)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_INSTALL

AC_MSG_CHECKING([whether we should use SDL])
AC_ARG_ENABLE(sdl,
              AC_HELP_STRING([--disable-sdl], [disable SDL support]),, enable_sdl="yes")
if test "x${enable_sdl}" != "xno"; then
    AC_MSG_RESULT([yes])
else
    AC_MSG_RESULT([no])
fi

dnl ===========================================================================
dnl Check for SDL
if test "x$enable_sdl" = "xyes"; then
    SDL_VERSION=1.2.4
    
    AM_PATH_SDL($SDL_VERSION,
        [
            use_sdl="yes"
            CXXFLAGS="$CXXFLAGS $SDL_CFLAGS"
            CFLAGS="$CFLAGS $SDL_CFLAGS"
            LIBS="$LIBS $SDL_LIBS"
            AC_DEFINE(HAVE_LIBSDL, 1, "SDL is present")
            ],
        use_sdl="no")
fi

AM_CONDITIONAL(HAVE_LIBSDL, test x$use_sdl = xyes)

AC_CHECK_LIB(SDL_image, IMG_Load,,
	AC_MSG_ERROR([SDL_image library required]))

AC_CHECK_LIB(SDL_ttf, TTF_OpenFont,,
	AC_MSG_ERROR([SDL_ttf library required]))

plib_suffix="-lplibjs -lplibsl -lplibssg -lplibpu -lplibfnt -lplibsg -lplibpw -lplibul -lplibssgaux"

dnl Checks for library functions.
dnl check for OpenGL related libraries

AC_CHECK_HEADER(windows.h, AC_DEFINE(WIN32))

AX_CHECK_GL
if test "x$no_gl" = "xyes"; then
    AC_MSG_ERROR(["Couldn't detect OpenGL"])
else
    CFLAGS="$CFLAGS $GL_CFLAGS"
    CXXFLAGS="$CXXFLAGS $GL_CFLAGS"
    LIBS="$plib_suffix $LIBS $GL_LIBS"
fi

dnl Check SGI audio library

AC_CHECK_LIB(audio, ALopenport)

if test "x$ac_cv_lib_audio_ALopenport" = "xyes" ; then
  dnl this is an SGI machine...
  LIBS="$LIBS -laudio"
fi

dnl Checks for header files.

AC_HEADER_STDC

AC_CHECK_HEADER(windows.h, AC_DEFINE(WIN32))
AC_CHECK_HEADER(joystick.h, AC_DEFINE(JOYSTICK_IS_PRESENT))
AC_CHECK_HEADER(linux/joystick.h, AC_DEFINE(LINUX_JOYSTICK_IS_PRESENT))

dnl Check for audio support

AM_CONDITIONAL(ENABLE_AUDIO, \
        test -r /usr/include/soundcard.h \
                -o -r /usr/include/linux/soundcard.h \
                -o -r /usr/include/machine/soundcard.h \
                -o -r /usr/include/audio.h \
                -o "x$ac_cv_header_windows_h" = "xyes" )

AM_CONDITIONAL(ENABLE_IRIX_AUDIO, test -r /usr/include/audio.h)

AM_CONDITIONAL(ENABLE_WIN32_AUDIO, test "x$ac_cv_header_windows_h" = "xyes")

if test "x$ac_cv_header_windows_h" != "xyes" ; then
  if test "x$GXX" != "xyes" ; then
    CFLAGS="$CFLAGS -I/usr/local/include -L/usr/local/lib"
    CXXFLAGS="$CXXFLAGS -I/usr/local/include -L/usr/local/lib"
  else
    CFLAGS="$CFLAGS -Wall"
    CXXFLAGS="$CXXFLAGS -Wall"
  fi
else
  CFLAGS="$CFLAGS -O6 -Wall $MACH -malign-double -I/usr/local/include -L/usr/local/lib"
  CXXFLAGS="$CXXFLAGS -O6 -Wall $MACH -malign-double -I/usr/local/include -L/usr/local/lib"
fi

MY_EXPAND_DIR(tuxkart_datadir, "$datadir/games/$PACKAGE")
AC_DEFINE_UNQUOTED(TUXKART_DATADIR, "$tuxkart_datadir")

AC_MSG_CHECKING(for debug mode)
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug], [enable debugging mode]),, enable_debug="yes")
if test "x${enable_debug}" != "xno"; then
    CXXFLAGS="$CXXFLAGS -Wall -W -Werror -DDEBUG -g -O0"
    CFLAGS="$CFLAGS -Wall -W -Werror -DDEBUG -g -O0"
    AC_MSG_RESULT([enabled])
else
    AC_MSG_RESULT([disabled])
fi

AC_OUTPUT( Makefile          \
           contrib/Makefile  \
           data/Makefile     \
           doc/Makefile      \
           fonts/Makefile    \
           images/Makefile   \
           models/Makefile   \
           mods/Makefile     \
           src/Makefile      \
           wavs/Makefile     \
          )

